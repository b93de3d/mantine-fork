{"version":3,"file":"auth.js","sources":["../../../../src/demos/hooks/use-form/auth.tsx"],"sourcesContent":["import React from 'react';\nimport { useMantineTheme } from '@mantine/core';\nimport { AuthenticationForm } from '../../../shared/AuthenticationForm/AuthenticationForm';\nimport { CodeDemo } from '../../../components/Demo/Demo';\n\nconst code = `\nimport React, { useState } from 'react';\nimport { useForm } from '@mantine/hooks';\nimport { EnvelopeClosedIcon, LockClosedIcon } from '@modulz/radix-icons';\nimport {\n  TextInput,\n  PasswordInput,\n  Group,\n  Checkbox,\n  Button,\n  Paper,\n  Text,\n  LoadingOverlay,\n  Anchor,\n  useMantineTheme,\n} from '@mantine/core';\n\nexport interface AuthenticationFormProps {\n  noShadow?: boolean;\n  noPadding?: boolean;\n  noSubmit?: boolean;\n  style?: React.CSSProperties;\n}\n\nexport function AuthenticationForm({\n  noShadow,\n  noPadding,\n  noSubmit,\n  style,\n}: AuthenticationFormProps) {\n  const [formType, setFormType] = useState<'register' | 'login'>('register');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string>(null);\n  const theme = useMantineTheme();\n\n  const toggleFormType = () => {\n    setFormType((current) => (current === 'register' ? 'login' : 'register'));\n    setError(null);\n  };\n\n  const form = useForm({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      termsOfService: true,\n    },\n\n    validationRules: {\n      firstName: (value) => formType === 'login' || value.trim().length >= 2,\n      lastName: (value) => formType === 'login' || value.trim().length >= 2,\n      email: (value) => /^\\\\S+@\\\\S+$/.test(value),\n      password: (value) => /^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{6,}$/.test(value),\n      confirmPassword: (val, values) => formType === 'login' || val === values.password,\n    },\n\n    errorMessages: {\n      email: 'Invalid email',\n      password: 'Password should contain 1 number, 1 letter and at least 6 characters',\n      confirmPassword: \"Passwords don't match. Try again\",\n    },\n  });\n\n  const handleSubmit = () => {\n    setLoading(true);\n    setError(null);\n    setTimeout(() => {\n      setLoading(false);\n      setError(\n        formType === 'register'\n          ? 'User with this email already exists'\n          : 'User with this email does not exist'\n      );\n    }, 3000);\n  };\n\n  return (\n    <Paper\n      padding={noPadding ? 0 : 'lg'}\n      shadow={noShadow ? null : 'sm'}\n      style={{\n        position: 'relative',\n        backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white,\n        ...style,\n      }}\n    >\n      <form onSubmit={form.onSubmit(handleSubmit)}>\n        <LoadingOverlay visible={loading} />\n        {formType === 'register' && (\n          <Group grow>\n            <TextInput\n              data-autofocus\n              required\n              placeholder=\"Your first name\"\n              label=\"First name\"\n              {...form.getInputProps('firstName')}\n            />\n\n            <TextInput\n              required\n              placeholder=\"Your last name\"\n              label=\"Last name\"\n              {...form.getInputProps('lastName')}\n            />\n          </Group>\n        )}\n\n        <TextInput\n          mt=\"md\"\n          required\n          placeholder=\"Your email\"\n          label=\"Email\"\n          icon={<EnvelopeClosedIcon />}\n          {...form.getInputProps('email')}\n        />\n\n        <PasswordInput\n          mt=\"md\"\n          required\n          placeholder=\"Password\"\n          label=\"Password\"\n          icon={<LockClosedIcon />}\n          {...form.getInputProps('password')}\n        />\n\n        {formType === 'register' && (\n          <PasswordInput\n            mt=\"md\"\n            required\n            label=\"Confirm Password\"\n            placeholder=\"Confirm password\"\n            icon={<LockClosedIcon />}\n            {...form.getInputProps('confirmPassword')}\n          />\n        )}\n\n        {formType === 'register' && (\n          <Checkbox\n            mt=\"xl\"\n            label=\"I agree to sell my soul and privacy to this corporation\"\n            {...form.getInputProps('termsOfService', { type: 'checkbox' })}\n          />\n        )}\n\n        {error && (\n          <Text color=\"red\" size=\"sm\" mt=\"sm\">\n            {error}\n          </Text>\n        )}\n\n        {!noSubmit && (\n          <Group position=\"apart\" mt=\"xl\">\n            <Anchor\n              component=\"button\"\n              type=\"button\"\n              color=\"gray\"\n              onClick={toggleFormType}\n              size=\"sm\"\n            >\n              {formType === 'register'\n                ? 'Have an account? Login'\n                : \"Don't have an account? Register\"}\n            </Anchor>\n\n            <Button color=\"blue\" type=\"submit\">\n              {formType === 'register' ? 'Register' : 'Login'}\n            </Button>\n          </Group>\n        )}\n      </form>\n    </Paper>\n  );\n}\n`;\n\nexport function UseFormAuthDemo({ toggle = true }: { toggle: boolean }) {\n  const theme = useMantineTheme();\n\n  return (\n    <CodeDemo\n      code={code.trim()}\n      language=\"tsx\"\n      toggle={toggle}\n      demoBackground={theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.colors.gray[0]}\n    >\n      <div style={{ maxWidth: 400, margin: 'auto' }}>\n        <AuthenticationForm\n          style={{\n            backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[8] : theme.white,\n          }}\n        />\n      </div>\n    </CodeDemo>\n  );\n}\n"],"names":[],"mappings":";;;;;AAIA,MAAM,IAAI,GAAG,CAAC;AACdeAAe,CAAC,EAAE,MAAM,GAAG,IAAI,EAAE,EAAE;AACnD,EAAE,MAAM,KAAK,GAAG,eAAe,EAAE,CAAC;AAClC,EAAE,uBAAuB,KAAK,CAAC,aAAa,CAAC,QAAQ,EAAE;AACvD,IAAI,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE;AACrB,IAAI,QAAQ,EAAE,KAAK;AACnB,IAAI,MAAM;AACV,IAAI,cAAc,EAAE,KAAK,CAAC,WAAW,KAAK,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAC9F,GAAG,kBAAkB,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE;AAChD,IAAI,KAAK,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE;AAC5C,GAAG,kBAAkB,KAAK,CAAC,aAAa,CAAC,kBAAkB,EAAE;AAC7D,IAAI,KAAK,EAAE;AACX,MAAM,eAAe,EAAE,KAAK,CAAC,WAAW,KAAK,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK;AACxF,KAAK;AACL,GAAG,CAAC,CAAC,CAAC,CAAC;AACP;;;;"}