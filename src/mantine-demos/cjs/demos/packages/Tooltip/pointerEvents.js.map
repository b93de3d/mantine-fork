{"version":3,"file":"pointerEvents.js","sources":["../../../../src/demos/packages/Tooltip/pointerEvents.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Cross1Icon } from '@modulz/radix-icons';\nimport { Tooltip, Button, ActionIcon, Text, Box, useMantineTheme } from '@mantine/core';\n\nconst code = `import React, { useState } from 'react';\nimport { Cross1Icon } from '@modulz/radix-icons';\nimport { Tooltip, Button, ActionIcon, Text, useMantineTheme } from '@mantine/core';\n\nfunction Demo() {\n  const [opened, setOpened] = useState(true);\n  const theme = useMantineTheme();\n\n  const tooltip = (\n    <div style={{ display: 'flex', marginRight: -5 }}>\n      <Text\n        size=\"xs\"\n        style={{ color: theme.colorScheme === 'dark' ? theme.colors.dark[9] : theme.white }}\n      >\n        Use this button to save this information in your profile, after that you will be able to\n        access it any time and share it via email.\n      </Text>\n      <ActionIcon\n      style={{ marginLeft: 5, color: theme.colorScheme === 'dark' ? theme.black : theme.white }}\n        size=\"xs\"\n        onClick={() => setOpened(false)}\n      >\n        <Cross1Icon style={{ width: 12, height: 12 }} />\n      </ActionIcon>\n    </div>\n  );\n\n  return (\n    <>\n      <Tooltip\n        label={tooltip}\n        opened={opened}\n        allowPointerEvents\n        withArrow\n        wrapLines\n        transition=\"rotate-left\"\n        transitionDuration={250}\n        width={220}\n        gutter={theme.spacing.xs}\n      >\n        <Button onClick={() => setOpened(false)}>Save to profile</Button>\n      </Tooltip>\n\n      {!opened && (\n        <Button\n          variant=\"light\"\n          color=\"gray\"\n          style={{ marginTop: theme.spacing.xs }}\n          onClick={() => setOpened(true)}\n        >\n          Reopen tooltip\n        </Button>\n      )}\n    </>\n  );\n}`;\n\nfunction Demo() {\n  const [opened, setOpened] = useState(true);\n  const theme = useMantineTheme();\n\n  const tooltip = (\n    <Box sx={{ display: 'flex', marginRight: -5 }} mr={-5}>\n      <Text\n        size=\"xs\"\n        sx={{ color: theme.colorScheme === 'dark' ? theme.colors.dark[9] : theme.white }}\n      >\n        Use this button to save this information in your profile, after that you will be able to\n        access it any time and share it via email.\n      </Text>\n      <ActionIcon\n        variant=\"transparent\"\n        sx={{ color: theme.colorScheme === 'dark' ? theme.black : theme.white }}\n        mr={5}\n        size=\"xs\"\n        onClick={() => setOpened(false)}\n      >\n        <Cross1Icon style={{ width: 12, height: 12 }} />\n      </ActionIcon>\n    </Box>\n  );\n\n  return (\n    <>\n      <Box\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          flexDirection: 'column',\n          paddingBottom: opened ? 44 : 0,\n        }}\n      >\n        <Tooltip\n          label={tooltip}\n          opened={opened}\n          allowPointerEvents\n          withArrow\n          wrapLines\n          transition=\"rotate-left\"\n          transitionDuration={250}\n          width={220}\n          gutter={theme.spacing.xs}\n        >\n          <Button onClick={() => setOpened(false)}>Save to profile</Button>\n        </Tooltip>\n        {!opened && (\n          <Button variant=\"light\" mt=\"xs\" onClick={() => setOpened(true)}>\n            Reopen tooltip\n          </Button>\n        )}\n      </Box>\n    </>\n  );\n}\n\nexport const pointerEvents: MantineDemo = {\n  type: 'demo',\n  code,\n  component: Demo,\n};\n"],"names":["useState","useMantineTheme","React","Box","Text","ActionIcon","Cross1Icon","Tooltip","Button"],"mappings":"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"}